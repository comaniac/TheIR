ROOT      = ./$(LEVEL)
GTEST_DIR = $(ROOT)/misc/googletest/googletest
CPPFLAGS += -isystem $(GTEST_DIR)/include
CXXFLAGS += -g -Wall -Wextra -pthread -std=c++11

SRC_DIR := $(ROOT)/src/main/$(notdir $(shell pwd)) 
SRCS := $(filter-out $(SRC_DIR)/main.cpp, $(wildcard $(SRC_DIR)/*.cpp))
OBJS := $(patsubst %.cpp, %.o, $(SRCS))

# Google Test headers.
GTEST_HEADERS = $(GTEST_DIR)/include/gtest/*.h \
                $(GTEST_DIR)/include/gtest/internal/*.h

# Test files.
TEST_SRCS := $(wildcard */*.cpp)
TEST_OBJS := $(patsubst %.cpp, %.o, $(TEST_SRCS))
TEST_EXES := $(patsubst %.cpp, %, $(TEST_SRCS))

all: $(TEST_EXES) $(TEST_DIR)/gtest_main.a $(TEST_DIR)/gtest.a

test:
	$(foreach exe, $(TEST_EXES), ./$(exe))

clean :
	rm -f $(OBJS) $(TEST_DIR)/*.a $(TEST_OBJS) $(TEST_EXES) *.o

# Build a test library

$(TEST_DIR)/gtest-all.o : $(TEST_SRCS) $(SRCS)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest-all.cc -o $@

$(TEST_DIR)/gtest_main.o : $(TEST_SRCS) $(SRCS)
	$(CXX) $(CPPFLAGS) -I$(GTEST_DIR) $(CXXFLAGS) -c \
            $(GTEST_DIR)/src/gtest_main.cc -o $@

$(TEST_DIR)/gtest.a : $(TEST_DIR)/gtest-all.o
	$(AR) $(ARFLAGS) $@ $^

$(TEST_DIR)/gtest_main.a : $(TEST_DIR)/gtest-all.o $(TEST_DIR)/gtest_main.o
	$(AR) $(ARFLAGS) $@ $^

# Builds tests

$(TEST_OBJS): %.o: %.cpp $(OBJS) $(GTEST_HEADERS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -c -o $@ $<

$(TEST_EXES): $(TEST_DIR)/gtest_main.a $(TEST_OBJS) $(OBJS)
	$(CXX) $(CPPFLAGS) $(CXXFLAGS) -lpthread $^ -o $@

